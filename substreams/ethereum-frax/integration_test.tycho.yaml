# Name of the substreams config file in your substreams module. Usually "./substreams.yaml"
substreams_yaml_path: ./substreams.yaml
# Name of the adapter contract, usually: ProtocolSwapAdapter"
adapter_contract: "FraxSwapV2SwapAdapter"
# Constructor signature of the Adapter contract"
adapter_build_signature: "constructor(address)"
# A comma separated list of args to be passed to the contructor of the Adapter contract"
adapter_build_args: "0x43eC799eAdd63848443E2347C49f5f52e8Fe0F6f"
# Whether or not the testing script should skip checking balances of the protocol components.
# If set to `true` please always add a reason why it's skipped.
skip_balance_check: false
# A list of accounts that need to be indexed to run the tests properly.
# Usually used when there is a global component required by all pools and created before the tested range of blocks. For example a factory or a vault.
# Please note that this component needs to be indexed by your substreams module, this feature is only for testing purpose.
# Also please always add a reason why this account is needed for your tests.
# This will be applied to each test.
# A list of protocol types names created by your Substreams module.
protocol_type_names:
  - "frax_pool"
# A list of tests.
tests:
  # Name of the test
  - name: test_pool_creation
    # Indexed block range
    start_block: 17000000
    stop_block: 17000001
    # Same as global `initialized_accounts` but only scoped to this test.
    initialized_accounts:
      - "0x43eC799eAdd63848443E2347C49f5f52e8Fe0F6f" # Needed for ....
    # A list of expected component indexed in the block range. Each component must match perfectly the `ProtocolComponent` indexed by your subtreams module.
    expected_components:
      - id: "0xB4e16d0168e52d35CaCD2c6185b44281Ec28C9Dc"
        tokens:
          - "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
          - "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
        creation_tx: "0x5e18a4ad51c1b74bfd85e3509a692a641f33959860d6be99b64004e88683e7f0"
        # Whether or not the script should skip trying to simulate a swap on this component.
        # If set to `true` please always add a reason why it's skipped.
        skip_simulation: false