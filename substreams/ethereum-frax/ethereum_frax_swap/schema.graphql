type factory_pair_created @entity {
    id: ID!
    evt_tx_hash: String!
    evt_index: BigInt!
    evt_block_time: String!
    evt_block_number: BigInt!
    pair: String!
    param3: BigDecimal!
    token0: String!
    token1: String!
}
type factory_call_create_pair1 @entity {
    id: ID!
    call_tx_hash: String!
    call_block_time: String!
    call_block_number: BigInt!
    call_ordinal: BigInt!
    call_success: Boolean!
    fee: BigDecimal!
    output_pair: String!
    token_a: String!
    token_b: String!
}
type factory_call_create_pair2 @entity {
    id: ID!
    call_tx_hash: String!
    call_block_time: String!
    call_block_number: BigInt!
    call_ordinal: BigInt!
    call_success: Boolean!
    output_pair: String!
    token_a: String!
    token_b: String!
}
type factory_call_set_fee_to @entity {
    id: ID!
    call_tx_hash: String!
    call_block_time: String!
    call_block_number: BigInt!
    call_ordinal: BigInt!
    call_success: Boolean!
    u_fee_to: String!
}
type factory_call_set_fee_to_setter @entity {
    id: ID!
    call_tx_hash: String!
    call_block_time: String!
    call_block_number: BigInt!
    call_ordinal: BigInt!
    call_success: Boolean!
    u_fee_to_setter: String!
}
type factory_call_toggle_global_pause @entity {
    id: ID!
    call_tx_hash: String!
    call_block_time: String!
    call_block_number: BigInt!
    call_ordinal: BigInt!
    call_success: Boolean!
}


type pair_approval @entity {
    id: ID!
    evt_tx_hash: String!
    evt_index: BigInt!
    evt_block_time: String!
    evt_block_number: BigInt!
    evt_address: String!
    owner: String!
    spender: String!
    value: BigDecimal!
}
type pair_burn @entity {
    id: ID!
    evt_tx_hash: String!
    evt_index: BigInt!
    evt_block_time: String!
    evt_block_number: BigInt!
    evt_address: String!
    amount0: BigDecimal!
    amount1: BigDecimal!
    sender: String!
    to: String!
}
type pair_cancel_long_term_order @entity {
    id: ID!
    evt_tx_hash: String!
    evt_index: BigInt!
    evt_block_time: String!
    evt_block_number: BigInt!
    evt_address: String!
    addr: String!
    buy_token: String!
    order_id: BigDecimal!
    purchased_amount: BigDecimal!
    sell_token: String!
    unsold_amount: BigDecimal!
}
type pair_long_term_swap0_to1 @entity {
    id: ID!
    evt_tx_hash: String!
    evt_index: BigInt!
    evt_block_time: String!
    evt_block_number: BigInt!
    evt_address: String!
    addr: String!
    amount0_in: BigDecimal!
    number_of_time_intervals: BigDecimal!
    order_id: BigDecimal!
}
type pair_long_term_swap1_to0 @entity {
    id: ID!
    evt_tx_hash: String!
    evt_index: BigInt!
    evt_block_time: String!
    evt_block_number: BigInt!
    evt_address: String!
    addr: String!
    amount1_in: BigDecimal!
    number_of_time_intervals: BigDecimal!
    order_id: BigDecimal!
}
type pair_lp_fee_updated @entity {
    id: ID!
    evt_tx_hash: String!
    evt_index: BigInt!
    evt_block_time: String!
    evt_block_number: BigInt!
    evt_address: String!
    fee: BigDecimal!
}
type pair_mint @entity {
    id: ID!
    evt_tx_hash: String!
    evt_index: BigInt!
    evt_block_time: String!
    evt_block_number: BigInt!
    evt_address: String!
    amount0: BigDecimal!
    amount1: BigDecimal!
    sender: String!
}
type pair_swap @entity {
    id: ID!
    evt_tx_hash: String!
    evt_index: BigInt!
    evt_block_time: String!
    evt_block_number: BigInt!
    evt_address: String!
    amount0_in: BigDecimal!
    amount0_out: BigDecimal!
    amount1_in: BigDecimal!
    amount1_out: BigDecimal!
    sender: String!
    to: String!
}
type pair_sync @entity {
    id: ID!
    evt_tx_hash: String!
    evt_index: BigInt!
    evt_block_time: String!
    evt_block_number: BigInt!
    evt_address: String!
    reserve0: BigDecimal!
    reserve1: BigDecimal!
}
type pair_transfer @entity {
    id: ID!
    evt_tx_hash: String!
    evt_index: BigInt!
    evt_block_time: String!
    evt_block_number: BigInt!
    evt_address: String!
    from: String!
    to: String!
    value: BigDecimal!
}
type pair_withdraw_proceeds_from_long_term_order @entity {
    id: ID!
    evt_tx_hash: String!
    evt_index: BigInt!
    evt_block_time: String!
    evt_block_number: BigInt!
    evt_address: String!
    addr: String!
    order_expired: Boolean!
    order_id: BigDecimal!
    proceed_token: String!
    proceeds: BigDecimal!
}type pair_call_approve @entity {
    id: ID!
    call_tx_hash: String!
    call_block_time: String!
    call_block_number: BigInt!
    call_ordinal: BigInt!
    call_success: Boolean!
    call_address: String!
    output_param0: Boolean!
    spender: String!
    value: BigDecimal!
}
type pair_call_burn @entity {
    id: ID!
    call_tx_hash: String!
    call_block_time: String!
    call_block_number: BigInt!
    call_ordinal: BigInt!
    call_success: Boolean!
    call_address: String!
    output_amount0: BigDecimal!
    output_amount1: BigDecimal!
    to: String!
}
type pair_call_cancel_long_term_swap @entity {
    id: ID!
    call_tx_hash: String!
    call_block_time: String!
    call_block_number: BigInt!
    call_ordinal: BigInt!
    call_success: Boolean!
    call_address: String!
    order_id: BigDecimal!
}
type pair_call_execute_virtual_orders @entity {
    id: ID!
    call_tx_hash: String!
    call_block_time: String!
    call_block_number: BigInt!
    call_ordinal: BigInt!
    call_success: Boolean!
    call_address: String!
    block_timestamp: BigDecimal!
}
type pair_call_get_twamm_order_proceeds @entity {
    id: ID!
    call_tx_hash: String!
    call_block_time: String!
    call_block_number: BigInt!
    call_ordinal: BigInt!
    call_success: Boolean!
    call_address: String!
    order_id: BigDecimal!
    output_order_expired: Boolean!
    output_total_reward: BigDecimal!
}
type pair_call_initialize @entity {
    id: ID!
    call_tx_hash: String!
    call_block_time: String!
    call_block_number: BigInt!
    call_ordinal: BigInt!
    call_success: Boolean!
    call_address: String!
    u_fee: BigDecimal!
    u_token0: String!
    u_token1: String!
}
type pair_call_long_term_swap_from0_to1 @entity {
    id: ID!
    call_tx_hash: String!
    call_block_time: String!
    call_block_number: BigInt!
    call_ordinal: BigInt!
    call_success: Boolean!
    call_address: String!
    amount0_in: BigDecimal!
    number_of_time_intervals: BigDecimal!
    output_order_id: BigDecimal!
}
type pair_call_long_term_swap_from1_to0 @entity {
    id: ID!
    call_tx_hash: String!
    call_block_time: String!
    call_block_number: BigInt!
    call_ordinal: BigInt!
    call_success: Boolean!
    call_address: String!
    amount1_in: BigDecimal!
    number_of_time_intervals: BigDecimal!
    output_order_id: BigDecimal!
}
type pair_call_mint @entity {
    id: ID!
    call_tx_hash: String!
    call_block_time: String!
    call_block_number: BigInt!
    call_ordinal: BigInt!
    call_success: Boolean!
    call_address: String!
    output_liquidity: BigDecimal!
    to: String!
}
type pair_call_permit @entity {
    id: ID!
    call_tx_hash: String!
    call_block_time: String!
    call_block_number: BigInt!
    call_ordinal: BigInt!
    call_success: Boolean!
    call_address: String!
    deadline: BigDecimal!
    owner: String!
    r: String!
    s: String!
    spender: String!
    v: Int!
    value: BigDecimal!
}
type pair_call_set_fee @entity {
    id: ID!
    call_tx_hash: String!
    call_block_time: String!
    call_block_number: BigInt!
    call_ordinal: BigInt!
    call_success: Boolean!
    call_address: String!
    new_fee: BigDecimal!
}
type pair_call_skim @entity {
    id: ID!
    call_tx_hash: String!
    call_block_time: String!
    call_block_number: BigInt!
    call_ordinal: BigInt!
    call_success: Boolean!
    call_address: String!
    to: String!
}
type pair_call_swap @entity {
    id: ID!
    call_tx_hash: String!
    call_block_time: String!
    call_block_number: BigInt!
    call_ordinal: BigInt!
    call_success: Boolean!
    call_address: String!
    amount0_out: BigDecimal!
    amount1_out: BigDecimal!
    data: String!
    to: String!
}
type pair_call_sync @entity {
    id: ID!
    call_tx_hash: String!
    call_block_time: String!
    call_block_number: BigInt!
    call_ordinal: BigInt!
    call_success: Boolean!
    call_address: String!
}
type pair_call_toggle_pause_new_swaps @entity {
    id: ID!
    call_tx_hash: String!
    call_block_time: String!
    call_block_number: BigInt!
    call_ordinal: BigInt!
    call_success: Boolean!
    call_address: String!
}
type pair_call_transfer @entity {
    id: ID!
    call_tx_hash: String!
    call_block_time: String!
    call_block_number: BigInt!
    call_ordinal: BigInt!
    call_success: Boolean!
    call_address: String!
    output_param0: Boolean!
    to: String!
    value: BigDecimal!
}
type pair_call_transfer_from @entity {
    id: ID!
    call_tx_hash: String!
    call_block_time: String!
    call_block_number: BigInt!
    call_ordinal: BigInt!
    call_success: Boolean!
    call_address: String!
    from: String!
    output_param0: Boolean!
    to: String!
    value: BigDecimal!
}
type pair_call_withdraw_proceeds_from_long_term_swap @entity {
    id: ID!
    call_tx_hash: String!
    call_block_time: String!
    call_block_number: BigInt!
    call_ordinal: BigInt!
    call_success: Boolean!
    call_address: String!
    order_id: BigDecimal!
    output_is_expired: Boolean!
    output_reward_tkn: String!
    output_total_reward: BigDecimal!
}

