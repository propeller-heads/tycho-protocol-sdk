{"abi":[{"type":"function","name":"extractAddress","inputs":[{"name":"input","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"extractedAddress","type":"address","internalType":"address"}],"stateMutability":"pure"}],"bytecode":{"object":"0x60808060405234601957610464908161001e823930815050f35b5f80fdfe60806040526004361015610011575f80fd5b5f3560e01c63637083f914610024575f80fd5b60203660031901126101095760043560a05260206080526100456040610121565b610056610050610187565b516102ff565b60208151910120610065610187565b60208151910120145f146100ad576100a961008f61008a610084610187565b5161038c565b6103e0565b6040516001600160a01b0390911681529081906020820190565b0390f35b6100b56101c1565b156100cd576100a96100c861008a610344565b61008f565b60405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a59081a5b9c1d5d08199bdc9b585d60621b6044820152606490fd5b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b601f80199101166080016080811067ffffffffffffffff82111761014457604052565b61010d565b90601f8019910116810190811067ffffffffffffffff82111761014457604052565b67ffffffffffffffff811161014457601f01601f191660200190565b60405190610196604083610149565b60088252675f435553544f4d5f60c01b6020830152565b634e487b7160e01b5f52601160045260245ffd5b608051906101cd610187565b518203918211610296576101df610187565b51608051818401908185116102965710610261576101fc816102a8565b905f5b818110610226575050805160209091012090915061021b610187565b602081519101201490565b8061024e6102406102396001948961029b565b60806102da565b516001600160f81b03191690565b5f1a61025a82866102da565b53016101ff565b60405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420736c69636560981b6044820152606490fd5b6101ad565b9190820180921161029657565b906102b28261016b565b6102bf6040519182610149565b82815280926102d0601f199161016b565b0190602036910137565b9081518110156102eb570160200190565b634e487b7160e01b5f52603260045260245ffd5b806080511061026157610311816102a8565b905f5b81811061032057505090565b8061033161024060019360806102da565b5f1a61033d82866102da565b5301610314565b6014608051106102615761035860146102a8565b5f5b60148110610366575090565b806103796102406102396001945f61029b565b5f1a61038582856102da565b530161035a565b9060805160148301908184116102965710610261576103ab60146102a8565b5f5b601481106103ba57509150565b806103cd6102406102396001948861029b565b5f1a6103d982856102da565b53016103ad565b60148151036103f0576014015190565b60405162461bcd60e51b8152602060048201526016602482015275092dcecc2d8d2c840c2c8c8e4cae6e640d8cadccee8d60531b6044820152606490fdfea264697066735822122003145e20d541a8018273b67ee72c5ec7f33640598b59e53e4333b93768bec03c64736f6c634300081b0033","sourceMap":"57:3733:57:-:0;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x60806040526004361015610011575f80fd5b5f3560e01c63637083f914610024575f80fd5b60203660031901126101095760043560a05260206080526100456040610121565b610056610050610187565b516102ff565b60208151910120610065610187565b60208151910120145f146100ad576100a961008f61008a610084610187565b5161038c565b6103e0565b6040516001600160a01b0390911681529081906020820190565b0390f35b6100b56101c1565b156100cd576100a96100c861008a610344565b61008f565b60405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a59081a5b9c1d5d08199bdc9b585d60621b6044820152606490fd5b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b601f80199101166080016080811067ffffffffffffffff82111761014457604052565b61010d565b90601f8019910116810190811067ffffffffffffffff82111761014457604052565b67ffffffffffffffff811161014457601f01601f191660200190565b60405190610196604083610149565b60088252675f435553544f4d5f60c01b6020830152565b634e487b7160e01b5f52601160045260245ffd5b608051906101cd610187565b518203918211610296576101df610187565b51608051818401908185116102965710610261576101fc816102a8565b905f5b818110610226575050805160209091012090915061021b610187565b602081519101201490565b8061024e6102406102396001948961029b565b60806102da565b516001600160f81b03191690565b5f1a61025a82866102da565b53016101ff565b60405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420736c69636560981b6044820152606490fd5b6101ad565b9190820180921161029657565b906102b28261016b565b6102bf6040519182610149565b82815280926102d0601f199161016b565b0190602036910137565b9081518110156102eb570160200190565b634e487b7160e01b5f52603260045260245ffd5b806080511061026157610311816102a8565b905f5b81811061032057505090565b8061033161024060019360806102da565b5f1a61033d82866102da565b5301610314565b6014608051106102615761035860146102a8565b5f5b60148110610366575090565b806103796102406102396001945f61029b565b5f1a61038582856102da565b530161035a565b9060805160148301908184116102965710610261576103ab60146102a8565b5f5b601481106103ba57509150565b806103cd6102406102396001948861029b565b5f1a6103d982856102da565b53016103ad565b60148151036103f0576014015190565b60405162461bcd60e51b8152602060048201526016602482015275092dcecc2d8d2c840c2c8c8e4cae6e640d8cadccee8d60531b6044820152606490fdfea264697066735822122003145e20d541a8018273b67ee72c5ec7f33640598b59e53e4333b93768bec03c64736f6c634300081b0033","sourceMap":"57:3733:57:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;57:3733:57;;;;;;723:23;57:3733;;;723:23;;57:3733;723:23;:::i;:::-;1802:36;57:3733;;:::i;:::-;188:10;1802:36;:::i;:::-;57:3733;188:10;;57:3733;;1792:47;57:3733;;:::i;:::-;;188:10;;57:3733;;1855:24;1792:87;813:599;1855:24;;;57:3733;970:59;985:43;57:3733;;:::i;:::-;188:10;985:43;:::i;:::-;970:59;:::i;:::-;57:3733;;-1:-1:-1;;;;;57:3733:57;;;;;;;;;;;;;;;;;813:599;1114:21;;:::i;:::-;;;;57:3733;1240:40;1255:24;;:::i;1240:40::-;813:599;;1110:302;57:3733;;-1:-1:-1;;;1371:30:57;;57:3733;;1371:30;;57:3733;;;;;;-1:-1:-1;;;57:3733:57;;;;;;1371:30;57:3733;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;57:3733:57;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;57:3733:57;;;;:::o;:::-;;;;;;;;;;;;2073:353;57:3733;188:10;57:3733;;;:::i;:::-;188:10;57:3733;;;;;;;;;:::i;:::-;188:10;57:3733;188:10;57:3733;;;;;;;;;2891:29;57:3733;;3031:17;;;:::i;:::-;3063:13;-1:-1:-1;3078:10:57;;;;;;-1:-1:-1;;188:10:57;;57:3733;;;;2259:132;3156:13;;-1:-1:-1;57:3733:57;;:::i;:::-;;188:10;;57:3733;;2395:24;2259:160;2073:353;:::o;3090:3::-;3126:9;3121:15;;3126:9;57:3733;3126:9;;;:::i;:::-;57:3733;3121:15;:::i;:::-;57:3733;-1:-1:-1;;;;;;57:3733:57;;;3121:15;-1:-1:-1;3109:27:57;;;;;:::i;:::-;;57:3733;3063:13;;57:3733;;;-1:-1:-1;;;57:3733:57;;;;;;;;;;;;-1:-1:-1;;;57:3733:57;;;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;188:10;;57:3733;;;;;;;;;:::o;:::-;;;;;;;;;;;;2665:511;188:10;57:3733;188:10;2891:29;57:3733;;3031:17;;;:::i;:::-;3063:13;-1:-1:-1;3078:10:57;;;;;;3156:13;;2665:511;:::o;3090:3::-;57:3733;3121:15;;57:3733;3121:15;57:3733;3121:15;:::i;:::-;-1:-1:-1;3109:27:57;;;;;:::i;:::-;;57:3733;3063:13;;2665:511;1276:2;57:3733;188:10;2891:29;57:3733;;3031:17;1276:2;3031:17;:::i;:::-;-1:-1:-1;3078:10:57;1276:2;3078:10;;;;3156:13;2665:511;:::o;3090:3::-;3126:9;3121:15;;3126:9;57:3733;3126:9;-1:-1:-1;3126:9:57;:::i;3121:15::-;-1:-1:-1;3109:27:57;;;;;:::i;:::-;;57:3733;3063:13;;2665:511;;57:3733;188:10;1025:2;57:3733;;;;;;;;2891:29;57:3733;;3031:17;1025:2;3031:17;:::i;:::-;-1:-1:-1;3078:10:57;1025:2;3078:10;;;;-1:-1:-1;3156:13:57;-1:-1:-1;2665:511:57:o;3090:3::-;3126:9;3121:15;;3126:9;57:3733;3126:9;;;:::i;3121:15::-;-1:-1:-1;3109:27:57;;;;;:::i;:::-;;57:3733;3063:13;;3366:422;3603:2;188:10;;3588:17;57:3733;;3603:2;3721:61;;3366:422;:::o;57:3733::-;;;-1:-1:-1;;;57:3733:57;;;;;;;;;;;;-1:-1:-1;;;57:3733:57;;;;;;","linkReferences":{}},"methodIdentifiers":{"extractAddress(bytes32)":"637083f9"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"input\",\"type\":\"bytes32\"}],\"name\":\"extractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"extractedAddress\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"extractAddress(bytes32)\":{\"details\":\"Extracts an address from a bytes32 input, assuming it is either prepended or appended with `_CUSTOM_`.\",\"params\":{\"input\":\"The bytes32 input containing the address and custom prefix/suffix.\"},\"returns\":{\"extractedAddress\":\"The extracted address.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/libraries/CustomBytesAppend.sol\":\"CustomBytesAppend\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":balancer-v2/interfaces/=lib/balancer-v2-monorepo/pkg/interfaces/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"src/libraries/CustomBytesAppend.sol\":{\"keccak256\":\"0x744de639d3f68d46b09e6f5f81ac003f92616f270007cc28778538894723276d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9278b5ff65908b5377e7b875151204ca6de587091c7bdd9f2f4f7d75b3d4d9e5\",\"dweb:/ipfs/QmPopj1aEWXtPg6CwKKAeEWBg1FBydPpQUM7VaFSvKvPU5\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.27+commit.40a35a09"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes32","name":"input","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"extractAddress","outputs":[{"internalType":"address","name":"extractedAddress","type":"address"}]}],"devdoc":{"kind":"dev","methods":{"extractAddress(bytes32)":{"details":"Extracts an address from a bytes32 input, assuming it is either prepended or appended with `_CUSTOM_`.","params":{"input":"The bytes32 input containing the address and custom prefix/suffix."},"returns":{"extractedAddress":"The extracted address."}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","balancer-v2/interfaces/=lib/balancer-v2-monorepo/pkg/interfaces/contracts/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/libraries/CustomBytesAppend.sol":"CustomBytesAppend"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"src/libraries/CustomBytesAppend.sol":{"keccak256":"0x744de639d3f68d46b09e6f5f81ac003f92616f270007cc28778538894723276d","urls":["bzz-raw://9278b5ff65908b5377e7b875151204ca6de587091c7bdd9f2f4f7d75b3d4d9e5","dweb:/ipfs/QmPopj1aEWXtPg6CwKKAeEWBg1FBydPpQUM7VaFSvKvPU5"],"license":"MIT"}},"version":1},"id":57}